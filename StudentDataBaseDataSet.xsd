<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StudentDataBaseDataSet" targetNamespace="http://tempuri.org/StudentDataBaseDataSet.xsd" xmlns:mstns="http://tempuri.org/StudentDataBaseDataSet.xsd" xmlns="http://tempuri.org/StudentDataBaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StudentDataBaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StudentDataBaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SqlProiectStudent.Properties.Settings.GlobalReference.Default.StudentDataBaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MaterieTableTableAdapter" GeneratorDataComponentClassName="MaterieTableTableAdapter" Name="MaterieTable" UserDataComponentName="MaterieTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentDataBaseConnectionString (Settings)" DbObjectName="StudentDataBase.dbo.MaterieTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MaterieTable] WHERE (([IDMaterie] = @Original_IDMaterie) AND ([Materia] = @Original_Materia) AND ([An] = @Original_An) AND ([Semestru] = @Original_Semestru))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDMaterie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMaterie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Materia" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Materia" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Semestru" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Semestru" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MaterieTable] ([IDMaterie], [Materia], [An], [Semestru]) VALUES (@IDMaterie, @Materia, @An, @Semestru);
SELECT IDMaterie, Materia, An, Semestru FROM MaterieTable WHERE (IDMaterie = @IDMaterie)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDMaterie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMaterie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Materia" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Materia" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Semestru" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Semestru" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDMaterie, Materia, An, Semestru FROM dbo.MaterieTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MaterieTable] SET [IDMaterie] = @IDMaterie, [Materia] = @Materia, [An] = @An, [Semestru] = @Semestru WHERE (([IDMaterie] = @Original_IDMaterie) AND ([Materia] = @Original_Materia) AND ([An] = @Original_An) AND ([Semestru] = @Original_Semestru));
SELECT IDMaterie, Materia, An, Semestru FROM MaterieTable WHERE (IDMaterie = @IDMaterie)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDMaterie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMaterie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Materia" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Materia" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Semestru" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Semestru" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDMaterie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMaterie" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Materia" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Materia" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Semestru" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Semestru" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDMaterie" DataSetColumn="IDMaterie" />
              <Mapping SourceColumn="Materia" DataSetColumn="Materia" />
              <Mapping SourceColumn="An" DataSetColumn="An" />
              <Mapping SourceColumn="Semestru" DataSetColumn="Semestru" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NoteTableTableAdapter" GeneratorDataComponentClassName="NoteTableTableAdapter" Name="NoteTable" UserDataComponentName="NoteTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentDataBaseConnectionString (Settings)" DbObjectName="StudentDataBase.dbo.NoteTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[NoteTable] ([IDStudent], [IDMaterie], [NotaLaborator], [NotaExamen]) VALUES (@IDStudent, @IDMaterie, @NotaLaborator, @NotaExamen)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDStudent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDMaterie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMaterie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@NotaLaborator" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="NotaLaborator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@NotaExamen" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="NotaExamen" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDStudent, IDMaterie, NotaLaborator, NotaExamen FROM dbo.NoteTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDStudent" DataSetColumn="IDStudent" />
              <Mapping SourceColumn="IDMaterie" DataSetColumn="IDMaterie" />
              <Mapping SourceColumn="NotaLaborator" DataSetColumn="NotaLaborator" />
              <Mapping SourceColumn="NotaExamen" DataSetColumn="NotaExamen" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableTableAdapter" GeneratorDataComponentClassName="StudentTableTableAdapter" Name="StudentTable" UserDataComponentName="StudentTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentDataBaseConnectionString (Settings)" DbObjectName="StudentDataBase.dbo.StudentTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentTable] WHERE (([IDStudent] = @Original_IDStudent) AND ([Nume] = @Original_Nume) AND ([Prenume] = @Original_Prenume) AND ([CNP] = @Original_CNP) AND ([An] = @Original_An))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDStudent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Prenume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNP" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNP" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentTable] ([IDStudent], [Nume], [Prenume], [CNP], [An]) VALUES (@IDStudent, @Nume, @Prenume, @CNP, @An);
SELECT IDStudent, Nume, Prenume, CNP, An FROM StudentTable WHERE (IDStudent = @IDStudent)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDStudent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Prenume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNP" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDStudent, Nume, Prenume, CNP, An FROM dbo.StudentTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentTable] SET [IDStudent] = @IDStudent, [Nume] = @Nume, [Prenume] = @Prenume, [CNP] = @CNP, [An] = @An WHERE (([IDStudent] = @Original_IDStudent) AND ([Nume] = @Original_Nume) AND ([Prenume] = @Original_Prenume) AND ([CNP] = @Original_CNP) AND ([An] = @Original_An));
SELECT IDStudent, Nume, Prenume, CNP, An FROM StudentTable WHERE (IDStudent = @IDStudent)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDStudent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Prenume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNP" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDStudent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Prenume" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNP" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNP" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDStudent" DataSetColumn="IDStudent" />
              <Mapping SourceColumn="Nume" DataSetColumn="Nume" />
              <Mapping SourceColumn="Prenume" DataSetColumn="Prenume" />
              <Mapping SourceColumn="CNP" DataSetColumn="CNP" />
              <Mapping SourceColumn="An" DataSetColumn="An" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StudentDataBaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="StudentDataBaseDataSet" msprop:Generator_UserDSName="StudentDataBaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="MaterieTable" msprop:Generator_TableClassName="MaterieTableDataTable" msprop:Generator_TableVarName="tableMaterieTable" msprop:Generator_TablePropName="MaterieTable" msprop:Generator_RowDeletingName="MaterieTableRowDeleting" msprop:Generator_RowChangingName="MaterieTableRowChanging" msprop:Generator_RowEvHandlerName="MaterieTableRowChangeEventHandler" msprop:Generator_RowDeletedName="MaterieTableRowDeleted" msprop:Generator_UserTableName="MaterieTable" msprop:Generator_RowChangedName="MaterieTableRowChanged" msprop:Generator_RowEvArgName="MaterieTableRowChangeEvent" msprop:Generator_RowClassName="MaterieTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDMaterie" msprop:Generator_ColumnVarNameInTable="columnIDMaterie" msprop:Generator_ColumnPropNameInRow="IDMaterie" msprop:Generator_ColumnPropNameInTable="IDMaterieColumn" msprop:Generator_UserColumnName="IDMaterie" type="xs:int" />
              <xs:element name="Materia" msprop:Generator_ColumnVarNameInTable="columnMateria" msprop:Generator_ColumnPropNameInRow="Materia" msprop:Generator_ColumnPropNameInTable="MateriaColumn" msprop:Generator_UserColumnName="Materia">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="An" msprop:Generator_ColumnVarNameInTable="columnAn" msprop:Generator_ColumnPropNameInRow="An" msprop:Generator_ColumnPropNameInTable="AnColumn" msprop:Generator_UserColumnName="An" type="xs:int" />
              <xs:element name="Semestru" msprop:Generator_ColumnVarNameInTable="columnSemestru" msprop:Generator_ColumnPropNameInRow="Semestru" msprop:Generator_ColumnPropNameInTable="SemestruColumn" msprop:Generator_UserColumnName="Semestru" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="NoteTable" msprop:Generator_TableClassName="NoteTableDataTable" msprop:Generator_TableVarName="tableNoteTable" msprop:Generator_TablePropName="NoteTable" msprop:Generator_RowDeletingName="NoteTableRowDeleting" msprop:Generator_RowChangingName="NoteTableRowChanging" msprop:Generator_RowEvHandlerName="NoteTableRowChangeEventHandler" msprop:Generator_RowDeletedName="NoteTableRowDeleted" msprop:Generator_UserTableName="NoteTable" msprop:Generator_RowChangedName="NoteTableRowChanged" msprop:Generator_RowEvArgName="NoteTableRowChangeEvent" msprop:Generator_RowClassName="NoteTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDStudent" msprop:Generator_ColumnVarNameInTable="columnIDStudent" msprop:Generator_ColumnPropNameInRow="IDStudent" msprop:Generator_ColumnPropNameInTable="IDStudentColumn" msprop:Generator_UserColumnName="IDStudent" type="xs:int" />
              <xs:element name="IDMaterie" msprop:Generator_ColumnVarNameInTable="columnIDMaterie" msprop:Generator_ColumnPropNameInRow="IDMaterie" msprop:Generator_ColumnPropNameInTable="IDMaterieColumn" msprop:Generator_UserColumnName="IDMaterie" type="xs:int" />
              <xs:element name="NotaLaborator" msprop:Generator_ColumnVarNameInTable="columnNotaLaborator" msprop:Generator_ColumnPropNameInRow="NotaLaborator" msprop:Generator_ColumnPropNameInTable="NotaLaboratorColumn" msprop:Generator_UserColumnName="NotaLaborator" type="xs:double" minOccurs="0" />
              <xs:element name="NotaExamen" msprop:Generator_ColumnVarNameInTable="columnNotaExamen" msprop:Generator_ColumnPropNameInRow="NotaExamen" msprop:Generator_ColumnPropNameInTable="NotaExamenColumn" msprop:Generator_UserColumnName="NotaExamen" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentTable" msprop:Generator_TableClassName="StudentTableDataTable" msprop:Generator_TableVarName="tableStudentTable" msprop:Generator_TablePropName="StudentTable" msprop:Generator_RowDeletingName="StudentTableRowDeleting" msprop:Generator_RowChangingName="StudentTableRowChanging" msprop:Generator_RowEvHandlerName="StudentTableRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentTableRowDeleted" msprop:Generator_UserTableName="StudentTable" msprop:Generator_RowChangedName="StudentTableRowChanged" msprop:Generator_RowEvArgName="StudentTableRowChangeEvent" msprop:Generator_RowClassName="StudentTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDStudent" msprop:Generator_ColumnVarNameInTable="columnIDStudent" msprop:Generator_ColumnPropNameInRow="IDStudent" msprop:Generator_ColumnPropNameInTable="IDStudentColumn" msprop:Generator_UserColumnName="IDStudent" type="xs:int" />
              <xs:element name="Nume" msprop:Generator_ColumnVarNameInTable="columnNume" msprop:Generator_ColumnPropNameInRow="Nume" msprop:Generator_ColumnPropNameInTable="NumeColumn" msprop:Generator_UserColumnName="Nume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Prenume" msprop:Generator_ColumnVarNameInTable="columnPrenume" msprop:Generator_ColumnPropNameInRow="Prenume" msprop:Generator_ColumnPropNameInTable="PrenumeColumn" msprop:Generator_UserColumnName="Prenume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CNP" msprop:Generator_ColumnVarNameInTable="columnCNP" msprop:Generator_ColumnPropNameInRow="CNP" msprop:Generator_ColumnPropNameInTable="CNPColumn" msprop:Generator_UserColumnName="CNP">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="An" msprop:Generator_ColumnVarNameInTable="columnAn" msprop:Generator_ColumnPropNameInRow="An" msprop:Generator_ColumnPropNameInTable="AnColumn" msprop:Generator_UserColumnName="An" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MaterieTable" />
      <xs:field xpath="mstns:IDMaterie" />
    </xs:unique>
    <xs:unique name="StudentTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentTable" />
      <xs:field xpath="mstns:IDStudent" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__NoteTable__IDMat__3A81B327" msdata:parent="MaterieTable" msdata:child="NoteTable" msdata:parentkey="IDMaterie" msdata:childkey="IDMaterie" msprop:Generator_UserChildTable="NoteTable" msprop:Generator_ChildPropName="GetNoteTableRows" msprop:Generator_UserRelationName="FK__NoteTable__IDMat__3A81B327" msprop:Generator_ParentPropName="MaterieTableRow" msprop:Generator_RelationVarName="relationFK__NoteTable__IDMat__3A81B327" msprop:Generator_UserParentTable="MaterieTable" />
      <msdata:Relationship name="foreignKey_Note" msdata:parent="StudentTable" msdata:child="NoteTable" msdata:parentkey="IDStudent" msdata:childkey="IDStudent" msprop:Generator_UserChildTable="NoteTable" msprop:Generator_ChildPropName="GetNoteTableRows" msprop:Generator_UserRelationName="foreignKey_Note" msprop:Generator_RelationVarName="relationforeignKey_Note" msprop:Generator_UserParentTable="StudentTable" msprop:Generator_ParentPropName="StudentTableRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>